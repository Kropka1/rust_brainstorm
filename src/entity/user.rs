//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16
use serde::{Deserialize, Serialize};
use sea_orm::entity::prelude::*;


#[derive(Clone, Serialize, Deserialize, Debug, PartialEq, DeriveEntityModel, Eq, )]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub created_at: i32,
    pub updated_at: i32,
    #[sea_orm(column_type = "Text", nullable)]
    pub username: String,
    pub role: String,
    pub referer: i64,
    #[sea_orm(column_type = "Text")]
    pub logo: String,
    #[serde(skip_serializing)]
    pub hashed_password: String,
}

#[derive(strum_macros::Display)]
#[derive(Deserialize, Serialize, Debug)]
pub enum Role{
    User,
    Admin,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
